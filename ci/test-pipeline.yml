trigger: none

pr:
  branches:
    include:
      - master

variables:
  QDB_LOG_W_FILE_LOCATION: "$(Build.BinariesDirectory)/tests.log"
  ARCHIVED_LOGS: "$(Build.ArtifactStagingDirectory)/questdb-$(Build.SourceBranchName)-$(Build.SourceVersion)-$(System.StageAttempt)-$(Agent.OS)-$(jdk).zip"
  DIFF_COVER_THRESHOLD_PCT: 50
  excludeTests: ""
  includeTests: "%regex[.*[^o].class]"
  MAVEN_CACHE_FOLDER: $(HOME)/.m2/repository
  MAVEN_OPTS: "-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER) -Xmx3072m"
  MAVEN_RUN_OPTS: "-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER) -Dmaven.resolver.transport=wagon -Dmaven.wagon.httpconnectionManager.ttlSeconds=30"
  MAVEN_VERSION: "version"
  MAVEN_VERSION_OPTION: "Default"

stages:
  - stage: CheckChanges
    displayName: "Check Changes"
    jobs:
      - template: templates/check-changes-job.yml

  - stage: RustTestAndLint
    displayName: "Rust Test and Lint"
    dependsOn:
      - CheckChanges
    jobs:
      - template: rust-test-and-lint.yaml

  - stage: SelfHostedRunGriffin
    displayName: "SelfHosted Griffin tests"
    condition: eq(variables['System.PullRequest.IsFork'], 'false')
    dependsOn:
      - CheckChanges
    jobs:
      - template: templates/start-self-hosted-job.yml
      - template: templates/self-hosted-jobs.yml
    variables:
      includeTests: "**/griffin/**"

  - stage: SelfHostedRunOther
    displayName: "SelfHosted Other tests"
    condition: eq(variables['System.PullRequest.IsFork'], 'false')
    dependsOn:
      - CheckChanges
    jobs:
      - template: templates/start-self-hosted-job.yml
      - template: templates/self-hosted-jobs.yml
    variables:
      excludeTests: "**/griffin/**"

  - stage: HostedRunTestsBranches
    displayName: "Hosted Running tests"
    dependsOn:
      - CheckChanges
    jobs:
      - template: templates/hosted-jobs.yml

  - stage: HostedRunTestsCoverageBranches
    displayName: "Hosted Running tests with cover"
    dependsOn:
      - CheckChanges
    jobs:
      - template: templates/hosted-cover-jobs.yml

  - stage: JavaCodeFormatting
    displayName: "Check Java Code Formatting with IntelliJ"
    dependsOn:
      - CheckChanges
    jobs:
      - template: templates/java-code-formatting-intellij.yml

  - stage: HostedRunCompatTestsBranches
    displayName: "Hosted Running CLI util and compat tests"
    dependsOn:
      - CheckChanges
    jobs:
      - template: templates/hosted-compat-jobs.yml

  - stage: CoverageReports
    displayName: "Coverage Report"
    dependsOn:
      - CheckChanges
      - HostedRunTestsCoverageBranches
    jobs:
      - job: CoverageReport
        displayName: "Coverage Report"
        pool:
          vmImage: "ubuntu-latest"
        variables:
          RUST_SOURCE_CODE_CHANGED: $[stageDependencies.CheckChanges.CheckChanges.outputs['check_coverage.RUST_SOURCE_CODE_CHANGED']]
          CODE_COVERAGE_TOOL_OPTION: $[stageDependencies.CheckChanges.CheckChanges.outputs['check_coverage.CODE_COVERAGE_TOOL_OPTION']]
        condition: |
          and(
              or(
                  eq(variables['RUST_SOURCE_CODE_CHANGED'], 'true'),
                  eq(variables['CODE_COVERAGE_TOOL_OPTION'], 'JaCoCo')
              ),
              eq(variables['System.PullRequest.IsFork'], 'false')
          )
        steps:
          - checkout: self
            fetchDepth: 1
            lfs: false
            submodules: false
          - download: current
            artifact: jacoco-coverage
          - download: current
            artifact: rust-llvm-coverage
          - template: install-llvm.yml
            parameters:
              shouldRun: eq(variables['RUST_SOURCE_CODE_CHANGED'], 'true')
          - bash: |
              set -eux
              export PATH=/usr/lib/llvm-$LLVM_VERSION/bin:$PATH
              ls -al $(Pipeline.Workspace)/rust-llvm-coverage

              # Merge partial profdata files into the complete report
              llvm-profdata merge -sparse -o questdbr.profdata $(Pipeline.Workspace)/rust-llvm-coverage/*.profdata

              # Compile the merged coverage report into an HTML report
              llvm-cov show \
                --format=html \
                --output-dir=rust-llvm-coverage \
                --ignore-filename-regex='(\.cargo/registry|rustc/.*\.rs)' \
                --instr-profile=questdbr.profdata \
                --object $(Pipeline.Workspace)/rust-llvm-coverage/libquestdbr.so \
                --object $(Pipeline.Workspace)/rust-llvm-coverage/questdbr-test-binary

              # Export the merged coverage report to LCOV format
              llvm-cov export \
                --format=lcov \
                --ignore-filename-regex='(.cargo/registry|rustc/.*\.rs)' \
                --instr-profile=questdbr.profdata \
                --object $(Pipeline.Workspace)/rust-llvm-coverage/libquestdbr.so \
                --object $(Pipeline.Workspace)/rust-llvm-coverage/questdbr-test-binary \
                > questdbr.lcov.dat

              # Convert LCOV coverage results to Cobertura XML format
              # https://www.collabora.com/news-and-blog/blog/2021/03/24/rust-integrating-llvm-source-base-code-coverage-with-gitlab/
              wget https://raw.githubusercontent.com/eriwen/lcov-to-cobertura-xml/master/lcov_cobertura/lcov_cobertura.py
              python3 lcov_cobertura.py questdbr.lcov.dat --output cobertura.xml --base-dir core/rust/qdbr/src
            displayName: "Merge partial Rust coverage reports into Cobertura format"
            condition: eq(variables['RUST_SOURCE_CODE_CHANGED'], 'true')

          - bash: |
              set -eux
              COVER_ARGS=""
              for f in "$(Pipeline.Workspace)/jacoco-coverage/jacoco.xml"; do
                [ -f "$f" ] && COVER_ARGS=" -type jacoco --cover $f"
              done
              [ -f cobertura.xml ] && COVER_ARGS="$COVER_ARGS -type cobertura --cover cobertura.xml"

              $JAVA_HOME_11_X64/bin/java -jar \
                $(Build.SourcesDirectory)/ci/cover-checker-1.5.0-all.jar \
                $COVER_ARGS --repo "questdb/questdb" --pr $(System.PullRequest.PullRequestNumber) \
                -t $(DIFF_COVER_THRESHOLD_PCT) --github-token $(GH_TOKEN)
            displayName: "Combine JaCoCo and Cobertura reports, create report for the PR's diff"
