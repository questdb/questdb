name: GLIBC Smoke Test
# Testing GLIBC compatibility

on:
  pull_request:
    types: [ synchronize, opened, reopened, edited ]
  workflow_dispatch:

jobs:
  amd64:
    if: ${{ github.event.pull_request.head.repo.full_name == github.repository }} # Only run on non-forked PRs
    runs-on: ubuntu-22.04
    container:
      # Use CentOS image - uses GLIBC 2.17
      image: centos:7
    steps:
      - name: Install dependencies
        run: dnf install -y curl maven git
      - name: Print GLIBC version
        run: ldd --version
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'maven'
      - name: Build distribution
        run: mvn -B clean install -Dmaven.test.skip=true -Pbuild-binaries -pl '!benchmarks'
      - name: Unpack distribution
        run: tar -xzf core/target/questdb-*-no-jre-bin.tar.gz
      - name: Start QuestDB
        run: ./questdb-*bin/questdb.sh start
      - name: Query database with curl
        run: |
          curl -G --data-urlencode \
              "query=SELECT * FROM long_sequence(1)" \
              http://localhost:9000/exp
      - name: Upload logs
        if: failure() # Only upload logs if the job failed
        uses: actions/upload-artifact@v4
        with:
          path: ~/.questdb/log/*
          name: logs
          retention-days: 5
  aarch64:
    if: ${{ github.event.pull_request.head.repo.full_name == github.repository }} # Only run on non-forked PRs
    runs-on: ubuntu-22.04-arm
    container:
      # Use AlmaLinux 8 image - uses GLIBC 2.28
      image: almalinux:8
    steps:
      - name: Install dependencies
        run: dnf install -y curl maven git
      - name: Print GLIBC version
        run: ldd --version
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'maven'
      - name: Build distribution
        run: mvn -B clean install -Dmaven.test.skip=true -Pbuild-binaries -pl '!benchmarks'
      - name: Unpack distribution
        run: tar -xzf core/target/questdb-*-no-jre-bin.tar.gz
      - name: Start QuestDB
        run: ./questdb-*bin/questdb.sh start
      - name: Query database with curl
        run: |
          curl -G --data-urlencode \
              "query=SELECT * FROM long_sequence(1)" \
              http://localhost:9000/exp
      - name: Upload logs
        if: failure() # Only upload logs if the job failed
        uses: actions/upload-artifact@v4
        with:
          path: ~/.questdb/log/*
          name: logs
          retention-days: 5

        

